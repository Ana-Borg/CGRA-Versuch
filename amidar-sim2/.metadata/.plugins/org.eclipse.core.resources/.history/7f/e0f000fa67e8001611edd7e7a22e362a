package gps.acquisition;


public class Acquisition {
	
	int N = 400;
	int nSample = 0;
	float[] realSample = new float[N];
	float[] imagSample = new float[N];
	
	int nCode = 0;	
	float[] realCode = new float[N];
	float[] imagCode = new float[N];
	
	int Dopplerverschiebung;
	int Codeverschiebung;
	
	int sampleFrequenz = 400000;
	int stepFrequenz = 1000;
	int maxFrequenz = 5000;
	int minFrequenz = -5000;
	float grenzwert = (float) 0.015;
	
	public boolean test(){
		if(nSample == 400) return true;
		return false;
	}
	
	public boolean enterSample(float real, float imag){
	
		if(nSample < 400) {
			realSample[nSample] = real;
			imagSample[nSample] = imag;
			nSample++;
		}
		else return true;
		
		return false;
	}
	
	public boolean enterCode(float real, float imag){
	
		if(nCode < 400) {
			realCode[nCode] = real;
			imagCode[nCode] = imag;
			nCode++;
		}
		else return true;
		
		return false;
	}
	
	public boolean startAcquisition(){
		
		/*int n = 0;
		float Pin = 0;
		
		for(n = minFrequenz; n <= maxFrequenz; n += stepFrequenz){
			
		}
		
		for(n = 0; n < N; n++){
			Pin += realSample[n]*realSample[n] + imagSample[n]*imagSample[n];
		}*/
		
		return false;
	}
	
	public int getDopplerverschiebung(){
		return Dopplerverschiebung;
	}
	
	public int getCodeVerschiebung(){
		return Codeverschiebung;
	}
	
	

}
