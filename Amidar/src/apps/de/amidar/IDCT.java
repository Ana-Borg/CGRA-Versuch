package de.amidar;

public class IDCT {

    private int[][] input;
    private static int COSBITS;
    private int[] z;
    private int[][] cos_k_i, cos_i_k;

    public IDCT (int[][] frequencies) {

	COSBITS = 20;
	this.z = new int[64];
        input=frequencies;

	int[][] cos_k_i = {
    	    {741455,741455,741455,741455,741455,741455,741455,741455},
    	    {1028427,871859,582557,204567,-204567,-582557,-871859,-1028427},
    	    {968757,401272,-401272,-968757,-968757,-401272,401272,968757},
    	    {871859,-204567,-1028427,-582557,582557,1028427,204567,-871859},
    	    {741455,-741455,-741455,741455,741455,-741455,-741455,741455},
    	    {582557,-1028427,204567,871859,-871859,-204567,1028427,-582557},
    	    {401272,-968757,968757,-401272,-401272,968757,-968757,401272},
    	    {204567,-582557,871859,-1028427,1028427,-871859,582557,-204567}
    	};
	this.cos_k_i = cos_k_i;

    	int[][] cos_i_k = {
    	    {741455,1028427,968757,871859,741455,582557,401272,204567},
    	    {741455,871859,401272,-204567,-741455,-1028427,-968757,-582557},
    	    {741455,582557,-401272,-1028427,-741455,204567,968757,871859},
    	    {741455,204567,-968757,-582557,741455,871859,-401272,-1028427},
    	    {741455,-204567,-968757,582557,741455,-871859,-401272,1028427},
    	    {741455,-582557,-401272,1028427,-741455,-204567,968757,-871859},
    	    {741455,-871859,401272,204567,-741455,1028427,-968757,582557},
    	    {741455,-1028427,968757,-871859,741455,-582557,401272,-204567}
    	};
	this.cos_i_k = cos_i_k;

    }

    private byte[][] getTransformedInt1DFast() {

        byte[][] res = new byte[8][8];

        for (int k=0; k<8; k++) {
            for (int i=0; i < 8; i++) {
                int x=0;
                for (int l=0; l<8; l++) {
                    x+= input[k][l]*cos_i_k[i][l];
                }
                z[k*8+i]=(x+(1<<(COSBITS-1)))/(1<<COSBITS+1);
            }
        }

        for (int i=0; i<8; i++) {
            for (int j=0; j < 8; j++) {
                int x=0;
                int ind=i;
                for (int k=0; k<8; k++) {
                    x+= z[ind]*cos_i_k[j][k];
                    ind+=8;
                }
                res[j][i]=(byte)((x+(1<<(COSBITS-1)))/(1<<COSBITS+1));
            }
        }

        return res;

    }

    public static void main(String[] args) {

        int[][] input = {
            {80, 70, 60, 50, 40, 30, 20, 10 },
            {70, 70, 60, 50, 40, 30, 20, 10 },
            {60, 70, 60, 50, 40, 30, 20, 10 },
            {50, 70, 60, 50, 40, 30, 20, 10 },
            {40, 70, 60, 50, 40, 30, 20, 10 },
            {30, 70, 60, 50, 40, 30, 20, 10 },
            {20, 70, 60, 50, 40, 30, 20, 10 },
            {10, 70, 60, 50, 40, 30, 20, 10 }
        };

        IDCT idct=new IDCT(input);
	byte[][] t;

/* <kern> */
	t = idct.getTransformedInt1DFast();
/* </kern> */
/* <kern> */
	t = idct.getTransformedInt1DFast();
/* </kern> */
	
	System.out.println(new char[]{'t', ':'});
	for(int i = 0 ; i < t.length; i++){
		for(int k = 0; k< t[0].length; k++){
			System.out.print(t[i][k]);
	    	System.out.print(',');
		}
		System.out.println();
    	
    }
    }

}

